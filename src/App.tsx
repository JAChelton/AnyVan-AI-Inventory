// src/App.tsx
import React, { useState } from 'react';
import { TabNavigation } from './components/navigation/TabNavigation';
import { SearchTabContent } from './components/content/SearchTabContent';
import { InventoryTabContent } from './components/content/InventoryTabContent';
import { AITabContent } from './components/content/AITabContent';
import { useInventory } from './hooks/useInventory';
import { useAIInventory } from './hooks/useAIInventory';
import { InventoryItem, InventoryRecord } from './types/inventory';
import { AIGeneratedItem } from './services/aiInventoryService';

type TabType = 'search' | 'inventory' | 'ai';

const App: React.FC = () => {
  const [activeTab, setActiveTab] = useState<TabType>('search');
  const [selectedItem, setSelectedItem] = useState<InventoryItem | null>(null);
  const [editingRecord, setEditingRecord] = useState<InventoryRecord | null>(null);

  const { addItem } = useInventory();
  const { addAIItem, removeAIItem, convertToInventoryItem } = useAIInventory();

  const handleAIItemGenerated = (aiItem: AIGeneratedItem) => {
    addAIItem(aiItem);
  };

  const handleAddAIItemToInventory = (aiItem: AIGeneratedItem) => {
    const inventoryItem: InventoryItem = {
      id: Date.now(),
      name: aiItem.name,
      WEIGHT: aiItem.weight,
      HEIGHT: aiItem.height,
      DEPTH: aiItem.depth,
      WIDTH: aiItem.width,
      VOLUME: aiItem.volume,
      RANK: aiItem.rank,
    };

    const newRecord: InventoryRecord = {
      id: Date.now(),
      item: inventoryItem,
      quantity: 1,
      location: 'Warehouse',
      notes: `Generated by AI from: "${aiItem.originalText}"`,
      dateAdded: new Date().toISOString(),
      confidence: aiItem.confidence,
      source: aiItem.source,
    };

    addItem(newRecord);
    removeAIItem(aiItem.id);
    
    // Switch to inventory tab to show the added item
    setActiveTab('inventory');
  };

  const renderTabContent = () => {
    switch (activeTab) {
      case 'search':
        return <SearchTabContent onItemSelect={setSelectedItem} />;
      
      case 'inventory':
        return (
          <InventoryTabContent
            editingRecord={editingRecord}
            onEditRecord={setEditingRecord}
          />
        );
      
      case 'ai':
        return (
          <AITabContent
            onAIItemGenerated={handleAIItemGenerated}
            onAddAIItemToInventory={handleAddAIItemToInventory}
          />
        );
      
      default:
        return null;
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <header className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="py-4">
            <h1 className="text-2xl font-bold text-gray-900">
              Inventory Management System
            </h1>
            <p className="text-sm text-gray-500 mt-1">
              Search, manage, and analyze your inventory with AI assistance
            </p>
          </div>
        </div>
      </header>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <TabNavigation activeTab={activeTab} onTabChange={setActiveTab} />
        {renderTabContent()}
      </main>

      <footer className="bg-white border-t border-gray-200 mt-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
          <p className="text-center text-sm text-gray-500">
            Powered by AI â€¢ Built with React & TypeScript
          </p>
        </div>
      </footer>
    </div>
  );
};

export default App;
